# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.56"
name = "pyo3"
version = "0.21.2"
authors = ["PyO3 Project and Contributors <https://github.com/PyO3>"]
exclude = [
    "/.gitignore",
    ".cargo/config",
    "/codecov.yml",
    "/Makefile",
    "/pyproject.toml",
    "/noxfile.py",
    "/.github",
    "/tests/test_compile_error.rs",
    "/tests/ui",
]
description = "Bindings to Python interpreter"
homepage = "https://github.com/pyo3/pyo3"
documentation = "https://docs.rs/crate/pyo3/"
readme = "README.md"
keywords = [
    "pyo3",
    "python",
    "cpython",
    "ffi",
]
categories = [
    "api-bindings",
    "development-tools::ffi",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/pyo3/pyo3"

[package.metadata.docs.rs]
features = [
    "full",
    "gil-refs",
]
no-default-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[dependencies.anyhow]
version = "1.0"
optional = true

[dependencies.cfg-if]
version = "1.0"

[dependencies.chrono]
version = "0.4.25"
optional = true
default-features = false

[dependencies.chrono-tz]
version = ">= 0.6, < 0.9"
optional = true
default-features = false

[dependencies.either]
version = "1.9"
optional = true

[dependencies.eyre]
version = ">= 0.4, < 0.7"
optional = true

[dependencies.hashbrown]
version = ">= 0.9, < 0.15"
optional = true

[dependencies.indexmap]
version = ">= 1.6, < 3"
optional = true

[dependencies.indoc]
version = "2.0.1"
optional = true

[dependencies.inventory]
version = "0.3.0"
optional = true

[dependencies.libc]
version = "0.2.62"

[dependencies.memoffset]
version = "0.9"

[dependencies.num-bigint]
version = "0.4"
optional = true

[dependencies.num-complex]
version = ">= 0.2, < 0.5"
optional = true

[dependencies.parking_lot]
version = ">= 0.11, < 0.13"

[dependencies.portable-atomic]
version = "1.0"

[dependencies.pyo3-ffi]
version = "=0.21.2"

[dependencies.pyo3-macros]
version = "=0.21.2"
optional = true

[dependencies.rust_decimal]
version = "1.0.0"
optional = true
default-features = false

[dependencies.serde]
version = "1.0"
optional = true

[dependencies.smallvec]
version = "1.0"
optional = true

[dependencies.unindent]
version = "0.2.1"
optional = true

[dev-dependencies.assert_approx_eq]
version = "1.1.0"

[dev-dependencies.chrono]
version = "0.4.25"

[dev-dependencies.chrono-tz]
version = ">= 0.6, < 0.9"

[dev-dependencies.futures]
version = "0.3.28"

[dev-dependencies.proptest]
version = "1.0"
features = ["std"]
default-features = false

[dev-dependencies.rayon]
version = "1.6.1"

[dev-dependencies.send_wrapper]
version = "0.6"

[dev-dependencies.serde]
version = "1.0"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0.61"

[dev-dependencies.trybuild]
version = ">=1.0.70"

[build-dependencies.pyo3-build-config]
version = "=0.21.2"
features = ["resolve-config"]

[features]
abi3 = [
    "pyo3-build-config/abi3",
    "pyo3-ffi/abi3",
]
abi3-py310 = [
    "abi3-py311",
    "pyo3-build-config/abi3-py310",
    "pyo3-ffi/abi3-py310",
]
abi3-py311 = [
    "abi3-py312",
    "pyo3-build-config/abi3-py311",
    "pyo3-ffi/abi3-py311",
]
abi3-py312 = [
    "abi3",
    "pyo3-build-config/abi3-py312",
    "pyo3-ffi/abi3-py312",
]
abi3-py37 = [
    "abi3-py38",
    "pyo3-build-config/abi3-py37",
    "pyo3-ffi/abi3-py37",
]
abi3-py38 = [
    "abi3-py39",
    "pyo3-build-config/abi3-py38",
    "pyo3-ffi/abi3-py38",
]
abi3-py39 = [
    "abi3-py310",
    "pyo3-build-config/abi3-py39",
    "pyo3-ffi/abi3-py39",
]
auto-initialize = []
default = ["macros"]
experimental-async = [
    "macros",
    "pyo3-macros/experimental-async",
]
experimental-declarative-modules = [
    "pyo3-macros/experimental-declarative-modules",
    "macros",
]
experimental-inspect = []
extension-module = ["pyo3-ffi/extension-module"]
full = [
    "macros",
    "anyhow",
    "chrono",
    "chrono-tz",
    "either",
    "experimental-async",
    "experimental-declarative-modules",
    "experimental-inspect",
    "eyre",
    "hashbrown",
    "indexmap",
    "num-bigint",
    "num-complex",
    "rust_decimal",
    "serde",
    "smallvec",
]
generate-import-lib = ["pyo3-ffi/generate-import-lib"]
gil-refs = []
macros = [
    "pyo3-macros",
    "indoc",
    "unindent",
]
multiple-pymethods = [
    "inventory",
    "pyo3-macros/multiple-pymethods",
]
nightly = []

[lints.clippy]
checked_conversions = "warn"
dbg_macro = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
let_unit_value = "warn"
manual_assert = "warn"
manual_ok_or = "warn"
todo = "warn"
unnecessary_wraps = "warn"
used_underscore_binding = "warn"
useless_transmute = "warn"

[lints.rust]
elided_lifetimes_in_paths = "warn"
invalid_doc_attributes = "warn"
rust_2018_idioms = "warn"
rust_2021_prelude_collisions = "warn"
unused_lifetimes = "warn"

[lints.rustdoc]
bare_urls = "warn"
broken_intra_doc_links = "warn"

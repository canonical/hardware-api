name: Test build hwlib Rust package with sbuild
permissions:
  contents: read
on:
  push:
    branches: [main]
    paths:
      - client/**
      - Cargo.*
      - ".github/workflows/test_hwlib_debian_build.yaml"
  pull_request:
    branches: [main]
    paths:
      - client/**
      - Cargo.*
      - ".github/workflows/test_hwlib_debian_build.yaml"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-version:
    runs-on: [self-hosted, linux, large, noble, x64]
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable
      - name: Check version consistency between Cargo.toml and debian/changelog
        run: |
          HWLIB_VERSION=$(cargo metadata --manifest-path hwlib/Cargo.toml --no-deps --format-version 1 | jq -r '.packages[0].version')
          echo "hwlib Cargo.toml version: $HWLIB_VERSION"

          HWCTL_VERSION=$(cargo metadata --manifest-path hwctl/Cargo.toml --no-deps --format-version 1 | jq -r '.packages[0].version')
          echo "hwctl Cargo.toml version: $HWCTL_VERSION"

          DEBIAN_VERSION=$(dpkg-parsechangelog --show-field Version | cut -d'~' -f1)
          echo "debian/changelog version: $DEBIAN_VERSION"

          if [[ $HWLIB_VERSION != $HWCTL_VERSION ]]; then
            echo "Version mismatch between hwlib and hwctl: $HWLIB_VERSION != $HWCTL_VERSION"
            exit 1
          fi

          if [[ $HWLIB_VERSION != $DEBIAN_VERSION ]]; then
            echo "Version mismatch between Cargo.toml and debian/changelog: $HWLIB_VERSION != $DEBIAN_VERSION"
            exit 1
          fi

          echo "All versions match: $HWLIB_VERSION"

  build:
    runs-on: [self-hosted, linux, large, noble, x64]
    defaults:
      run:
        working-directory: client
    needs: [validate-version]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      # Prevent lxd-agent from getting restarted on apt upgrades.
      # https://warthogs.atlassian.net/browse/ISD-2139
      - name: Disable lxd-agent restart
        run: |
          mkdir -p /etc/needrestart/conf.d
          echo '$nrconf{override_rc}{qr(^lxd-agent.service$)} = 0;' | sudo tee /etc/needrestart/conf.d/lxdagent.conf
      - name: Download dependencies
        run: |
          set -xeu
          sudo DEBIAN_FRONTEND=noninteractive apt -y update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y \
            sbuild \
            schroot \
            debootstrap \
            ubuntu-dev-tools \
            distro-info-data \
            dh-cargo \
            dh-apparmor \
            pkg-config \
            libssl-dev
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable
      - name: Vendor the dependencies
        run: |
          cargo install cargo-vendor-filterer
          ./debian/vendor-rust.sh
      - name: Generate checksums
        run: ./debian/generate_checksums.py
      - run: dpkg-buildpackage -us -uc -S
      - name: Setup sbuild and build the package
        run: |
          set -xeu

          sudo sbuild-adduser $USER
          cp /usr/share/doc/sbuild/examples/example.sbuildrc /home/$USER/.sbuildrc

          sg sbuild -c "mk-sbuild questing"

          PACKAGE_DSC=$(find ../ -name "*.dsc" | head -n 1)
          if [ -z "$PACKAGE_DSC" ]; then
            echo "No .dsc file found"
            exit 1
          fi
          echo "Running sbuild for $PACKAGE_DSC"
          sg sbuild -c "sbuild $PACKAGE_DSC -d questing -v --resolve-alternatives --no-clean-source --no-run-lintian"

          mv *.deb "$RUNNER_TEMP"
        env:
          RUNNER_TEMP: ${{ runner.temp }}
      # TODO: Uncomment this step one lintian gets updated
      # - run: lintian --pedantic --verbose
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-debs-questing
          path: "${{ runner.temp }}/*.deb"
          retention-days: 3

name: Test client lib and CLI tool
on: [push]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint-and-test:
    runs-on: [self-hosted, linux, large]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo check
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check
      - run: rustup component add clippy
      - run: cargo clippy --all-features --verbose
      - name: Run cargo test
        run: cargo test -- --test-threads=1

  py-bindings-test:
    runs-on: [self-hosted, linux, large]
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Create virtual environment
        run: python -m venv venv
      - name: Install Python dependencies
        run: |
          ./venv/bin/pip install black pytest maturin virtualenv
      - name: Check tests style with black
        run: ./venv/bin/black --check client/hwlib/pytests/
      - name: Build the Rust lib with Python bindings
        run: |
          source venv/bin/activate
          cd client/hwlib/
          maturin develop
      - name: Run pytest
        run: |
          cd client/hwlib/
          ../../venv/bin/pytest pytests/

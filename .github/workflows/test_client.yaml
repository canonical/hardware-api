name: Test client lib and CLI tool
permissions:
  contents: read
on:
  push:
    branches: [main]
    paths:
      - client/**
      - Cargo.*
      - ".github/workflows/test_client.yaml"
  pull_request:
    branches: [main]
    paths:
      - client/**
      - Cargo.*
      - ".github/workflows/test_client.yaml"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: [self-hosted, linux, large, noble, x64]
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkgconf libssl-dev build-essential
      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          rustup override set stable
      - run: cargo install cargo-vendor-filterer
      - name: Vendor the dependencies
        run: |
          ./debian/vendor-rust.sh
          cat >>~/.cargo/config.toml << __CONFIG__
          [source.crates-io]
          replace-with = "vendored-sources"
          [source.vendored-sources]
          directory = "$PWD/rust-vendor"
          __CONFIG__
          cat ~/.cargo/config.toml
      - run: cargo build --offline
      - run: cargo check
      - run: |
          rustup component add rustfmt
          cargo fmt --all -- --check
      - run: |
          rustup component add clippy
          cargo clippy --all-features --verbose
      - run: cargo clippy --tests --verbose
      - name: Run cargo test
        run: cargo test

  py-bindings-test:
    runs-on: [self-hosted, linux, large, noble, x64]
    defaults:
      run:
        working-directory: client/hwlib
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkgconf libssl-dev build-essential
      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          rustup override set stable
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install tox
        run: |
          pip install tox
      - name: Run tox
        run: tox
